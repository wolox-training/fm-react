[{"/Users/federico.h.macias/fm-react/react/w-books/src/index.tsx":"1","/Users/federico.h.macias/fm-react/react/w-books/src/components/signup.tsx":"2","/Users/federico.h.macias/fm-react/react/w-books/src/config/i18n.js":"3","/Users/federico.h.macias/fm-react/react/w-books/src/reportWebVitals.ts":"4"},{"size":922,"mtime":1658349817642,"results":"5","hashOfConfig":"6"},{"size":2990,"mtime":1660315151131,"results":"7","hashOfConfig":"6"},{"size":233,"mtime":1611583528000,"results":"8","hashOfConfig":"6"},{"size":425,"mtime":1611583528000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dhdag",{"filePath":"12","messages":"13","errorCount":3,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/federico.h.macias/fm-react/react/w-books/src/index.tsx",[],"/Users/federico.h.macias/fm-react/react/w-books/src/components/signup.tsx",["19","20","21","22"],"import { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport React from 'react';\n\nimport logo from '../assets/LogoWolox.png';\n\nexport default function SignUp() {\n  const history = useHistory();\n  const { register, handleSubmit, getValues } = useForm({ mode: 'onSubmit' });\n  const onSubmit = (data: Record<string, any>) => {\n    // eslint-disable-next-line no-console\n    console.log(data);\n    console.log(getValues());\n    history.push('/home');\n  };\n\n  return (\n    <div>\n      <div className=\"master-container login-master-container\">\n        <div className=\"login-container\">\n          <img className=\"wolox-logo\" src={logo} alt=\"wolox logo\" />\n          <form className=\"login-form\">\n            <label htmlFor=\"name\" className=\"text\">\n              {' '}\n              Nombre\n            </label>\n            <input\n              type=\"name\"\n              className=\"credentials-box\"\n              id=\"nombre\"\n              name=\"first_name\"\n              ref={register({ required: true, pattern: /^[A-Za-z]+$/i })}\n            />\n            <label htmlFor=\"surname\" className=\"text\">\n              {' '}\n              Apellido\n            </label>\n            <input\n              type=\"surname\"\n              className=\"credentials-box\"\n              id=\"apellido\"\n              name=\"last_name\"\n              ref={register({ required: true, pattern: /^[A-Za-z]+$/i })}\n            />\n            <label htmlFor=\"email\" className=\"text\">\n              {' '}\n              Email\n            </label>\n            <input\n              type=\"email\"\n              className=\"credentials-box\"\n              id=\"email\"\n              name=\"email\"\n              ref={register({ required: true })}\n            />\n            <label htmlFor=\"password\" className=\"text\">\n              {' '}\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"credentials-box\"\n              id=\"password\"\n              name=\"password\"\n              ref={register({ required: true })}\n            />\n            <label htmlFor=\"password\" className=\"text\">\n              {' '}\n              Confirmación de Password\n            </label>\n            <input\n              type=\"password\"\n              className=\"credentials-box\"\n              id=\"confirmacionPassword\"\n              name=\"confirmacionPassword\"\n              ref={register({\n                required: true,\n                validate: {\n                  equalsPassword: value => {\n                    const { password } = getValues('password');\n                    return password === value || 'Passwords should match!';\n                  }\n                }\n              })}\n            />\n            <button type=\"button\" className=\"button action-button\" onClick={onSubmit}>Sign Up</button>\n          </form>\n          <button type=\"button\" className=\"button redirection-button\">Login</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/federico.h.macias/fm-react/react/w-books/src/config/i18n.js",[],"/Users/federico.h.macias/fm-react/react/w-books/src/reportWebVitals.ts",[],{"ruleId":"23","severity":2,"message":"24","line":9,"column":21,"nodeType":"25","messageId":"26","endLine":9,"endColumn":33},{"ruleId":"27","severity":1,"message":"28","line":13,"column":5,"nodeType":"29","messageId":"30","endLine":13,"endColumn":16},{"ruleId":"31","severity":2,"message":"32","line":86,"column":87,"nodeType":null,"endLine":86,"endColumn":94,"fix":"33"},{"ruleId":"31","severity":2,"message":"34","line":88,"column":71,"nodeType":null,"endLine":88,"endColumn":76,"fix":"35"},"@typescript-eslint/no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","prettier/prettier","Replace `Sign·Up` with `⏎··············Sign·Up⏎············`",{"range":"36","text":"37"},"Replace `Login` with `⏎············Login⏎··········`",{"range":"38","text":"39"},[2823,2830],"\n              Sign Up\n            ",[2928,2933],"\n            Login\n          "]